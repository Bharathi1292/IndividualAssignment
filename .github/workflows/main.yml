name: CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
  id-token: write
  pages: write
  
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world! 
      
      - name: install Faker
        run: pip install faker
     
      - name: create csv file
        run: python generate.py
     
      - name: create JSON file
        run: python csvtojson.py
     
      - name: install pytest
        run: pip install pytest
    
        
      - name: Run unit tests
        run: |
          mkdir -p test_results
          pytest Test2.py --junitxml=test_results/results.xml
          
      - name: Upload first test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results-1
          path: test_results

      - name: Run unit tests
        run: |
          mkdir -p test_results
          pytest test.py --junitxml=test_results/results1.xml
        continue-on-error: true

      - name: Check test results and deploy if successful
        if: always()
        run: |
          if [ ${{ job.status }} == "success" ]; then
            echo "Tests passed. Deploying to GitHub Pages..."
            # Deploy to GitHub Pages
            gh-pages-deploy-action@4.1.2
            with:
              ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              BRANCH: gh-pages
              FOLDER: .  # Assuming your HTML+JavaScript files are in the root directory
          else
            echo "Tests failed. Deployment skipped."
          fi
      - name: Upload second test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results-2
          path: test_results

      - name: Copy to dist
        run: |
          mkdir dist
          cp index.html dist/index.html
          cp data.json dist/data.json
          cp script.js dist/script.js      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
